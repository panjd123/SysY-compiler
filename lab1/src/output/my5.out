int: K, (1, 1)
n: I, (1, 5)
;: D, (1, 6)
int: K, (2, 1)
QuickSort: I, (2, 5)
(: D, (2, 14)
int: K, (2, 15)
arr: I, (2, 19)
[: D, (2, 22)
]: D, (2, 23)
,: D, (2, 24)
int: K, (2, 26)
low: I, (2, 30)
,: D, (2, 33)
int: K, (2, 35)
high: I, (2, 39)
): D, (2, 43)
{: D, (3, 1)
if: K, (4, 5)
(: D, (4, 8)
low: I, (4, 9)
<: O, (4, 13)
high: I, (4, 15)
): D, (4, 19)
{: D, (5, 5)
int: K, (6, 9)
i: I, (6, 13)
;: D, (6, 14)
i: I, (7, 9)
=: O, (7, 11)
low: I, (7, 13)
;: D, (7, 16)
int: K, (8, 9)
j: I, (8, 13)
;: D, (8, 14)
j: I, (9, 9)
=: O, (9, 11)
high: I, (9, 13)
;: D, (9, 17)
int: K, (10, 9)
k: I, (10, 13)
;: D, (10, 14)
k: I, (11, 9)
=: O, (11, 11)
arr: I, (11, 13)
[: D, (11, 16)
low: I, (11, 17)
]: D, (11, 20)
;: D, (11, 21)
while: K, (12, 9)
(: D, (12, 15)
i: I, (12, 16)
<: O, (12, 18)
j: I, (12, 20)
): D, (12, 21)
{: D, (13, 9)
while: K, (14, 13)
(: D, (14, 18)
i: I, (14, 19)
<: O, (14, 21)
j: I, (14, 23)
&&: O, (14, 25)
arr: I, (14, 28)
[: D, (14, 31)
j: I, (14, 32)
]: D, (14, 33)
>: O, (14, 35)
k: I, (14, 37)
-: O, (14, 39)
1: C, (14, 41)
): D, (14, 42)
{: D, (15, 13)
j: I, (16, 17)
=: O, (16, 19)
j: I, (16, 21)
-: O, (16, 23)
1: C, (16, 25)
;: D, (16, 26)
}: D, (17, 13)
if: K, (19, 13)
(: D, (19, 15)
i: I, (19, 16)
<: O, (19, 18)
j: I, (19, 20)
): D, (19, 21)
{: D, (20, 13)
arr: I, (21, 17)
[: D, (21, 20)
i: I, (21, 21)
]: D, (21, 22)
=: O, (21, 24)
arr: I, (21, 26)
[: D, (21, 29)
j: I, (21, 30)
]: D, (21, 31)
;: D, (21, 32)
i: I, (22, 17)
=: O, (22, 19)
i: I, (22, 21)
+: O, (22, 23)
1: C, (22, 25)
;: D, (22, 26)
}: D, (23, 13)
while: K, (25, 13)
(: D, (25, 18)
i: I, (25, 19)
<: O, (25, 21)
j: I, (25, 23)
&&: O, (25, 25)
arr: I, (25, 28)
[: D, (25, 31)
i: I, (25, 32)
]: D, (25, 33)
<: O, (25, 35)
k: I, (25, 37)
): D, (25, 38)
{: D, (26, 13)
i: I, (27, 17)
=: O, (27, 19)
i: I, (27, 21)
+: O, (27, 23)
1: C, (27, 25)
;: D, (27, 26)
}: D, (28, 13)
if: K, (30, 13)
(: D, (30, 15)
i: I, (30, 16)
<: O, (30, 18)
j: I, (30, 20)
): D, (30, 21)
{: D, (31, 13)
arr: I, (32, 17)
[: D, (32, 20)
j: I, (32, 21)
]: D, (32, 22)
=: O, (32, 24)
arr: I, (32, 26)
[: D, (32, 29)
i: I, (32, 30)
]: D, (32, 31)
;: D, (32, 32)
j: I, (33, 17)
=: O, (33, 19)
j: I, (33, 21)
-: O, (33, 23)
1: C, (33, 25)
;: D, (33, 26)
}: D, (34, 13)
}: D, (35, 9)
arr: I, (37, 9)
[: D, (37, 12)
i: I, (37, 13)
]: D, (37, 14)
=: O, (37, 16)
k: I, (37, 18)
;: D, (37, 19)
int: K, (38, 9)
tmp: I, (38, 13)
;: D, (38, 16)
tmp: I, (39, 9)
=: O, (39, 13)
i: I, (39, 15)
-: O, (39, 17)
1: C, (39, 19)
;: D, (39, 20)
tmp: I, (40, 9)
=: O, (40, 13)
QuickSort: I, (40, 15)
(: D, (40, 24)
arr: I, (40, 25)
,: D, (40, 28)
low: I, (40, 30)
,: D, (40, 33)
tmp: I, (40, 35)
): D, (40, 38)
;: D, (40, 39)
tmp: I, (41, 9)
=: O, (41, 13)
i: I, (41, 15)
+: O, (41, 17)
1: C, (41, 19)
;: D, (41, 20)
tmp: I, (42, 9)
=: O, (42, 13)
QuickSort: I, (42, 15)
(: D, (42, 24)
arr: I, (42, 25)
,: D, (42, 28)
tmp: I, (42, 30)
,: D, (42, 33)
high: I, (42, 35)
): D, (42, 39)
;: D, (42, 40)
}: D, (43, 5)
return: K, (44, 5)
0: C, (44, 12)
;: D, (44, 13)
}: D, (45, 1)
int: K, (47, 1)
main: K, (47, 5)
(: D, (47, 9)
): D, (47, 10)
{: D, (47, 11)
n: I, (48, 5)
=: O, (48, 7)
10: C, (48, 9)
;: D, (48, 11)
int: K, (49, 5)
a: I, (49, 9)
[: D, (49, 10)
10: C, (49, 11)
]: D, (49, 13)
;: D, (49, 14)
a: I, (50, 5)
[: D, (50, 6)
0: C, (50, 7)
]: D, (50, 8)
=: O, (50, 9)
4: C, (50, 10)
;: D, (50, 11)
a: I, (50, 12)
[: D, (50, 13)
1: C, (50, 14)
]: D, (50, 15)
=: O, (50, 16)
3: C, (50, 17)
;: D, (50, 18)
a: I, (50, 19)
[: D, (50, 20)
2: C, (50, 21)
]: D, (50, 22)
=: O, (50, 23)
9: C, (50, 24)
;: D, (50, 25)
a: I, (50, 26)
[: D, (50, 27)
3: C, (50, 28)
]: D, (50, 29)
=: O, (50, 30)
2: C, (50, 31)
;: D, (50, 32)
a: I, (50, 33)
[: D, (50, 34)
4: C, (50, 35)
]: D, (50, 36)
=: O, (50, 37)
0: C, (50, 38)
;: D, (50, 39)
a: I, (51, 5)
[: D, (51, 6)
5: C, (51, 7)
]: D, (51, 8)
=: O, (51, 9)
1: C, (51, 10)
;: D, (51, 11)
a: I, (51, 12)
[: D, (51, 13)
6: C, (51, 14)
]: D, (51, 15)
=: O, (51, 16)
6: C, (51, 17)
;: D, (51, 18)
a: I, (51, 19)
[: D, (51, 20)
7: C, (51, 21)
]: D, (51, 22)
=: O, (51, 23)
5: C, (51, 24)
;: D, (51, 25)
a: I, (51, 26)
[: D, (51, 27)
8: C, (51, 28)
]: D, (51, 29)
=: O, (51, 30)
7: C, (51, 31)
;: D, (51, 32)
a: I, (51, 33)
[: D, (51, 34)
9: C, (51, 35)
]: D, (51, 36)
=: O, (51, 37)
8: C, (51, 38)
;: D, (51, 39)
int: K, (52, 5)
i: I, (52, 9)
;: D, (52, 10)
i: I, (53, 5)
=: O, (53, 7)
0: C, (53, 9)
;: D, (53, 10)
int: K, (54, 5)
tmp: I, (54, 9)
;: D, (54, 12)
tmp: I, (55, 5)
=: O, (55, 9)
9: C, (55, 11)
;: D, (55, 12)
i: I, (56, 5)
=: O, (56, 7)
QuickSort: I, (56, 9)
(: D, (56, 18)
a: I, (56, 19)
,: D, (56, 20)
i: I, (56, 22)
,: D, (56, 23)
tmp: I, (56, 25)
): D, (56, 28)
;: D, (56, 29)
while: K, (57, 5)
(: D, (57, 11)
i: I, (57, 12)
<: O, (57, 14)
n: I, (57, 16)
): D, (57, 17)
{: D, (57, 19)
int: K, (58, 9)
tmp: I, (58, 13)
;: D, (58, 16)
tmp: I, (59, 9)
=: O, (59, 13)
a: I, (59, 15)
[: D, (59, 16)
i: I, (59, 17)
]: D, (59, 18)
;: D, (59, 19)
putint: I, (60, 9)
(: D, (60, 15)
tmp: I, (60, 16)
): D, (60, 19)
;: D, (60, 20)
tmp: I, (61, 9)
=: O, (61, 13)
10: C, (61, 15)
;: D, (61, 17)
putch: I, (62, 9)
(: D, (62, 14)
tmp: I, (62, 15)
): D, (62, 18)
;: D, (62, 19)
i: I, (63, 9)
=: O, (63, 11)
i: I, (63, 13)
+: O, (63, 15)
1: C, (63, 17)
;: D, (63, 18)
}: D, (64, 5)
return: K, (65, 5)
0: C, (65, 12)
;: D, (65, 13)
}: D, (66, 1)
